@using web_app.Models;
@using web_app.Services
@using web_app.Components
@using Microsoft.AspNetCore.Components.Web
@using System.Text.Json;
@inject DatabaseService databaseService


<style>
.container-fluid>.navbar-header {
  float: left;
  margin-right: 10px;
}
.navbar .navbar-nav {
  float: left;
}
.nav>li {
  float: left;
}

</style>

<header>
        <nav class="navbar navbar-expand-sm navbar-light mb-1" style="background-color: white; padding: auto; padding-top: 10px; padding-left: 5px">
            <div class="container-fluid">
                <div class="d-sm-inline-flex justify-content-between">
                    <input @bind="CurrentInput" @bind:event="oninput" class="form-control mr-sm-2" placeholder="Search" aria-label="Search" style="margin-right: 10px; width: 300px">
                    <div class="dropdown">
                      <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Filters
                      </button>
                      <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                          <li class="dropdown-header text-primary">Status</li>
                          <li class="dropdown-item" @onclick="@(e => AddFilter("converted"))">Converted</li>
                          <li class="dropdown-item" @onclick="@(e => AddFilter("purchased"))">Purchased</li>
                          <li class="dropdown-divider"></li>
                          <li class="dropdown-header text-primary">Campaign</li>
                          <li class="dropdown-item" @onclick="@(e => AddFilter("saved-cart"))">Saved Cart</li>
                          <li class="dropdown-item" @onclick="@(e => AddFilter("abandoned-cart"))">Abandoned Cart</li>
                          <li class="dropdown-divider"></li>
                          <li class="dropdown-header text-primary">Country</li>
                          <li class="dropdown-item" @onclick="@(e => AddFilter("jp"))">Japan</li>
                          <li class="dropdown-item" @onclick="@(e => AddFilter("us"))">US</li>
                          <li class="dropdown-divider"></li>
                          <li class="dropdown-header text-primary">Language</li>
                          <li class="dropdown-item" @onclick="@(e => AddFilter("ja"))">Japanese</li>
                          <li class="dropdown-item" @onclick="@(e => AddFilter("en"))">English</li>
                          <!--
                          <li class="dropdown-header text-primary">Customer Set</li>
                          <a class="dropdown-item" @onclick="@(e => Filter = "jpbsd1")">jpbsd1</a>
                          <a class="dropdown-item" @onclick="@(e => Filter = "4")">4</a>
                          <a class="dropdown-item" @onclick="@(e => Filter = "6099")">6099</a>
                          -->
                      </div>
                    </div>
                    <!-- Date Picker -->
                    <div class="input-group" style="width:auto">
                      <span class="input-group-text btn-dark" id="basic-addon1">Start Date</span>
                      <input @bind="StartDate" class="form-control" type="datetime-local" id="datepicker">
                    </div>
                    <div class="input-group" style="width:auto">
                      <span class="input-group-text btn-dark" id="basic-addon1">End Date</span>
                      <input @bind="EndDate" class="form-control" type="datetime-local" id="datepicker">
                    </div>
                    <button @onclick="@ResetDate" type="button" class="btn btn-primary" style="margin-right: 10px">Clear Date</button>
                @foreach (var Filter in Filters)
                {
                    <div class="alert alert-primary alert-dismissible fade show" role="alert" style="width: auto; padding-right:45px; margin-right: 10px">
                        @Filter
                        <button @onclick="(e => RemoveFilter(Filter))" type="button" class="btn-close" data-dismiss="alert" aria-label="Close" style="height: 4px; padding: 16px; padding-left: 5px">
                        </button>
                    </div>
                }
                </div>
            </div>
        </nav>
    </header>

<div>
<table class="table table-hover table-bordered">
  <thead style="background-color: #007DB8; color: white;">
  <tr>
    <th>ID</th>
    <th>Target</th>
    <th>Status</th>
    <th>Campaign</th>
    <th>Expiry</th>
    <th>When Created</th>
    <th>When Updated</th>
    <th>Content</th>
    <th>Country</th>
    <th>Language</th>
    <th>Customer Set</th>
  </tr>
  </thead>
  <tbody>
  <!-- Populate Table with Data from Database -->
  @if (StartDate == null && EndDate == null)
  {
      @foreach (var item in databaseService.GetActionItems())
      {
          @if (CheckFilters(item) && (CurrentInput == "" || CurrentInput == null || item.target.Contains(CurrentInput) || item.ID.ToString().Contains(CurrentInput)))
          {
                <tr id="row" @onclick="(e => selectedItemID = item.ID)" data-toggle="modal" data-target="#exampleModal" style="cursor: pointer">
                    <th>@item.ID</th>
                    <th>@item.target</th>
                    <th>@item.status</th>
                    <th>@item.campaign</th>
                    <th>@item.expiry</th>
                    <th>@item.when_created</th>
                    <th>@item.when_updated</th>
                    <th>@item.content</th>
                    <th>@item.country</th>
                    <th>@item.language</th>
                    <th>@item.customerset</th>
                </tr>
          }
      }
  }
  else { <!-- Filter within date range -->
      @foreach (var item in databaseService.GetActionItemsInTimeRange(StartDate, EndDate, "when_created"))
      {
          @if (CheckFilters(item) && (CurrentInput == "" || CurrentInput == null || item.target.Contains(CurrentInput) || item.ID.ToString().Contains(CurrentInput)))
          {
                <tr id="row" @onclick="(e => selectedItemID = item.ID)" data-toggle="modal" data-target="#exampleModal" style="cursor: pointer">
                    <th>@item.ID</th>
                    <th>@item.target</th>
                    <th>@item.status</th>
                    <th>@item.campaign</th>
                    <th>@item.expiry</th>
                    <th>@item.when_created</th>
                    <th>@item.when_updated</th>
                    <th>@item.content</th>
                    <th>@item.country</th>
                    <th>@item.language</th>
                    <th>@item.customerset</th>
                </tr>
          }
      }
  }
        </tbody>
</table>
</div>

@if (@selectedItemID != null)
{
    <!-- Modal -->
    <ActionItemDetails actionItemID="@selectedItemID" />
}

@code {
    ActionItem selectedItem;
    int selectedItemID;
    string? CurrentInput;
    DateTime? StartDate;
    DateTime? EndDate;
    public List<string> Filters = new List<string>();

    bool CheckFilters(ActionItem actionItem)
    {
        int count = 0;
        if (Filters.Contains(actionItem.status)) count++;
        if (Filters.Contains(actionItem.campaign)) count++;
        if (Filters.Contains(actionItem.country)) count++;
        if (Filters.Contains(actionItem.language)) count++;
        if (Filters.Contains(actionItem.customerset)) count++;
        if (count == Filters.Count())
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    void selectItem (ActionItem item)
    {
        if (item != null)
        {
            selectedItem = item;
        }
    }

    void RemoveFilter(string Filter)
    {
        Filters.Remove(Filter);
    }

    void AddFilter(string Filter)
    {
        if (!Filters.Contains(Filter))
        {
            Filters.Add(Filter);
        }
    }

    void ResetDate()
    {
        StartDate = null;
        EndDate = null;
    }

}